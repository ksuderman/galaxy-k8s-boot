---
- name: Setup NFS Provisioner
  hosts: controllers[0]
  vars:
    persistence_storage_class: blockstorage
    size: "10Gi"
    default: false
    allow_expansion: true
    reclaim: Delete
    version: 1.8.0
  environment:
    KUBECONFIG: "{{ '/root' if ansible_user == 'root' else '/home/' + ansible_user }}/.kube/config"
  tasks:
    - name: Create the NFS namespace
      kubernetes.core.k8s:
        kind: Namespace
        name: nfs-provisioner
        state: present

    - name: Install the Ganesha NFS Helm repository
      kubernetes.core.helm_repository:
        name: nfs-ganesha
        repo_url: https://kubernetes-sigs.github.io/nfs-ganesha-server-and-external-provisioner/
        state: present

    - name: Helm install Ganesha NFS
      kubernetes.core.helm:
        name: nfs-provisioner
        namespace: nfs-provisioner
        chart_ref: nfs-ganesha/nfs-server-provisioner
        chart_version: "{{ version }}"
        values:
          service:
            type: LoadBalancer
            # Expose all required NFS and locking ports
            ports:
              nfs: 2049
              mountd: 20048
              rpcbind: 111
              nlm: 32765
            # Ensure session affinity for locking
            sessionAffinity: ClientIP
            sessionAffinityConfig:
              clientIP:
                timeoutSeconds: 10800
          mountOptions:
            - nfsvers=4.2
            - vers=4.2
            - hard
            - intr
            - rsize=1048576
            - wsize=1048576
            - timeo=600
            - retrans=2
            - locks         # Enable NFS locking
            - local_lock=all # Use all locking mechanisms
          # Enable NFS locking services
          env:
            - name: ENABLE_NFS_V4
              value: "yes"
            - name: ENABLE_NLM
              value: "yes"
            - name: GRACE_PERIOD
              value: "90"
          # Additional container settings for locking
          securityContext:
            privileged: true
            capabilities:
              add:
                - SYS_ADMIN
                - DAC_READ_SEARCH
          persistence:
            enabled: true
            storageClass: "{{ persistence_storage_class }}"
            size: "{{ size }}"
          storageClass:
            create: true
            defaultClass: "{{ default }}"
            allowVolumeExpansion: "{{ allow_expansion }}"
            reclaimPolicy: "{{ reclaim }}"
