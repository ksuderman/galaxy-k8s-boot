ingress:
  enabled: true
  ingressClassName: ""
  canary:
    enabled: false
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  hosts:
  - host: ~
    paths:
    - path: /
  path: /

image:
  repository: ksuderman/galaxy-min
  tag: "25.1-batch"
#  repository: quay.io/galaxyproject/galaxy-min
#  tag: "24.2.1-uid"

#setupJob:
#  securityContext:
#    runAsUser: 0
jobs:
  rules:
    tpv_rules_local.yml:
      tools:
        toolshed.g2.bx.psu.edu/repos/iuc/metaphlan/metaphlan/.*:
          cores: 16
          mem: 96

resources:
  limits:
    memory: 64G

persistence:
  storageClass: nfs
  size: 20Gi

cvmfs:
  deployPostInstallFix: true
  cvmfscsi:
    cache:
      local:
        enabled: true
        pvc:
          storageClass: nfs
          name: cvmfs-local-cache
      alien:
        enabled: false
        pvc:
          name: cvmfs-alien-cache
    logVerbosityLevel: 5

postgresql:
  persistence:
    storageClass: blockstorage

rabbitmq:
  persistence:
    storageClassName: blockstorage

  galaxy.yml:
    galaxy:
      require_login: false
      show_welcome_with_login: true
      allow_user_creation: true
      job_metrics:
        - type: core
        - type: cgroup
        - type: cpuinfo
        - type: meminfo
        - type: uname
extraFileMappings:
  /galaxy/server/static/welcome.html:
    applyToWeb: true
    applyToNginx: true
    content: |
      <!DOCTYPE html>
      <html lang="en">
          <head>
              <meta charset="utf-8" />
              <link rel="stylesheet" href="dist/base.css" type="text/css" />
          </head>
          <body class="m-0">
              <div class="py-4">
                  <div class="container">
                      <div class="row mb-4">
                          <div class="col-md-12">
                              <h2>Welcome to Galaxy</h2>
                              <p>
                                  Galaxy is an interactive and workflow analysis
                                  platform providing a graphical user interface
                                  for computational tools. This is a test Galaxy 
                                  instance running on the Google Cloud Platform 
                                  for testing dispatching jobs to Google Batch.
                              </p>
                          </div>
                      </div>
                  </div>
              </div>
          </body>
      </html>

configs:
  job_conf.yml:
    runners:
      gcp_batch:
        load: galaxy.jobs.runners.gcp_batch:GoogleCloudBatchJobRunner
        workers: 4
        # Basic GCP settings
        project_id: anvil-and-terra-development
        region: us-east1
        service_account_file: /path/to/service-account-key.json

        # NFS configuration (required)
        nfs_server: 10.0.0.100  # NFS server IP or hostname
        nfs_path: /             # Root path on NFS server
        nfs_mount_path: /mnt/nfs # Mount point in Batch VMs

        # Network configuration (required for NFS access)
        network: default
        subnet: default

        # Compute resources (defaults shown)
        machine_type: e2-standard-4
        vcpu: 1.0
        memory_mib: 2048
        boot_disk_size_gb: 100
        boot_disk_type: pd-standard

        # Container settings
        use_container: true
        container_image: ubuntu:20.04  # fallback if tool doesn't specify
        galaxy_user_id: 10001
        galaxy_group_id: 10001

        # Optional: Custom VM image
        # custom_vm_image: projects/your-project/global/images/galaxy-batch-vm

        # Job execution settings
        max_retry_count: 3
        max_run_duration: 3600s
        polling_interval: 30
    execution:
      gcp_batch:
        runner: gcp_batch
        # Override runner parameters if needed
        container_image: ubuntu:20.04
        machine_type: e2-standard-4
    destinations:
      - id: gcp_batch_default
        runner: gcp_batch
    tools:
      - id: Cut1
        environment: gcp_batch