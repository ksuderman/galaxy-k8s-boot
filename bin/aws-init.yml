#cloud-config
package_update: true
package_upgrade: true
package_reboot_if_required: true
package_repository: ppa:ansible/ansible
packages:
  - software-properties-common
  - git
  - ansible
disk_setup:
  /dev/nvme1n1:
    table_type: 'mbr'
    layout:
      - 100
    overwrite: true
fs_setup:
    - label: 'block_storage'
      filesystem: 'ext4'
      device: '/dev/nvme1n1'
mounts:
    - ["/dev/nvme1n1", "/mnt/block_storage", "ext4", "defaults", "0", "2"]
write_files:
  - path: /run/aws-cloud-init.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      set -e
      #-------------------------------
      # CloudMC configuration
      #-------------------------------
      # Generate random API keys and store them someplace safe
      cat /dev/urandom | tr -dc 'a-zA-Z0-9_+-' | head -c 32 > galaxy_api_key && chmod 400 galaxy_api_key
      cat /dev/urandom | tr -dc 'a-zA-Z0-9_+-' | head -c 32 > pulsar_api_key && chmod 400 pulsar_api_key

      # Application is either galaxy or pulsar
      APPLICATION=galaxy
      GALAXY_API_KEY=$(cat galaxy_api_key)
      PULSAR_API_KEY=$(cat pulsar_api_key)
      #-------------------------------
      RESERVED_CORES=2
      RESERVED_MEM_MB=6144
      cd /home/ubuntu
      git clone https://github.com/ksuderman/galaxy-k8s-boot.git --branch ks-testing 
      cd galaxy-k8s-boot
      cat inventories/localhost.template | sed -i "s|__HOST__|$(curl -s ifconfig.me)|" > inventories/localhost
      #ansible-playbook -i inventories/localhost playbook.yml --extra-vars "job_max_cores=$(($(nproc) - $RESERVED_CORES))" --extra-vars "job_max_mem=$(($(free -m | awk '/^Mem:/{print $2}') - $RESERVED_MEM_MB))" --extra-vars "application=$APPLICATION" --extra-vars "galaxy_api_key=$GALAXY_API_KEY" --extra-vars "pulsar_api_key=$PULSAR_API_KEY"
runcmd:
  - /run/aws-cloud-init.sh



