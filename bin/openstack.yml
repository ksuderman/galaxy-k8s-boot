#cloud-config
package_update: true
package_upgrade: true
package_reboot_if_required: true
package_repository: ppa:ansible/ansible
packages:
  - software-properties-common
  - git
  - ansible
runcmd:
  - mkdir /mnt/block_storage
#  - cat /dev/urandom | tr -dc 'a-zA-Z0-9_+-' | head -c 32 > /run/galaxy_api_key
  - echo galaxypassword > /run/galaxy_api_key
  - cat /dev/urandom | tr -dc 'a-zA-Z0-9_+-' | head -c 32 > /run/pulsar_api_key
#  - git clone https://github.com/galaxyproject/galaxy-k8s-boot.git /run/galaxy-k8s-boot
  - git clone --single-branch --branch metaphlan https://github.com/ksuderman/galaxy-k8s-boot.git /run/galaxy-k8s-boot
  # Wait for floating IP assignment and detect the correct public IP
  - |
    echo "Waiting for floating IP assignment..."
    i=1
    while [ $i -le 60 ]; do
      # Try to get public IP from multiple sources
      public_ip=$(curl -s --connect-timeout 5 ifconfig.me || curl -s --connect-timeout 5 icanhazip.com || curl -s --connect-timeout 5 ipecho.net/plain)
      local_ips=$(hostname -I)
      
      echo "Attempt $i: Public IP: $public_ip, Local IPs: $local_ips"
      
      # Check if we have a public IP that's not in private ranges
      if [ -n "$public_ip" ] && ! echo "$public_ip" | grep -qE '^(10\.|192\.168\.|172\.(1[6-9]|2[0-9]|3[01])\.)'; then
        echo "Found public IP: $public_ip"
        break
      fi
      
      # Also check local interfaces for non-private IPs
      for ip in $local_ips; do
        if ! echo "$ip" | grep -qE '^(10\.|192\.168\.|172\.(1[6-9]|2[0-9]|3[01])\.|127\.)'; then
          public_ip="$ip"
          echo "Found public IP on local interface: $public_ip"
          break
        fi
      done
      
      # Break if we found a public IP
      if [ -n "$public_ip" ] && ! echo "$public_ip" | grep -qE '^(10\.|192\.168\.|172\.(1[6-9]|2[0-9]|3[01])\.)'; then
        break
      fi
      
      sleep 10
      i=$((i + 1))
    done
    
    if [ -z "$public_ip" ] || echo "$public_ip" | grep -qE '^(10\.|192\.168\.|172\.(1[6-9]|2[0-9]|3[01])\.)']; then
      echo "Warning: No public IP found, using fallback"
      public_ip=$(hostname -I | awk '{print $1}')
    fi
    
    echo "Using IP: $public_ip" > /run/detected_ip
  - ip=$(cat /run/detected_ip | cut -d' ' -f3) && cd /run/galaxy-k8s-boot && cat inventories/localhost.template | sed "s/__HOST__/$ip/g" | sed "s/__USER__/ubuntu/" | sed "s/localhost/$ip/g" > inventories/localhost
  - cd /run/galaxy-k8s-boot && ansible-playbook -i inventories/localhost playbook.yml --extra-vars "job_max_cores=$(($(nproc) - 2))" --extra-vars "job_max_mem=$(($(free -m | awk '/^Mem:/{print $2}') - 6144))" --extra-vars "application=galaxy" --extra-vars "galaxy_api_key=$(cat /run/galaxy_api_key)" --extra-vars "pulsar_api_key=$(cat /run/pulsar_api_key)" -e "galaxy_admin_users=admin@example.com"




